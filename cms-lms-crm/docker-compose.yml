version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cms-lms-crm-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cms_lms_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cms-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: cms-lms-crm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cms-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cms-lms-crm-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: cms_lms_crm
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - cms-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: cms-lms-crm-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - cms-network

volumes:
  postgres_data:
  redis_data:

networks:
  cms-network:
    driver: bridge